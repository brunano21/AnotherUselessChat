{
  "name": "mongoose-session",
  "version": "0.0.2",
  "author": {
    "name": "Chance Dickson",
    "email": "chance@chardev.se",
    "url": "http://chardev.se"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/TheRealCharDev/mongoose-session.git"
  },
  "dependencies": {
    "express-session": "~1.7.6"
  },
  "readme": "# mongoose-session\n\nExpress 4 Middleware for MongoDB Session Storage using the Mongoose ODM\n\n## Installation\n\n    npm install mongoose-session\n    \n## Usage\n\n    var express = require('express');\n    \n    var mongoose = require('mongoose');\n    mongoose.connect('mongodb://localhost/db');\n    \n    var app = express();\n    \n    app.use(require('express-session')({\n        key: 'session',\n        secret: 'SUPER SECRET SECRET',\n        store: require('mongoose-session')(mongoose)\n    }));\n\n## Options\n\nmongoose-session accepts options as a second parameters.\n\n* `options.ttl` : allowed time of inactivity before a session is destroyed, in seconds (3600)\n    \n## Info\n\nThis works perfectly for my current use in projects, and requires no configuration. If your usage of mongoose-session would require any extra configuration to work properly, feel free to submit an issue or pull request, and I'll look over it and make any changes needed to be made for this to work for everyone. :)",
  "readmeFilename": "README.md",
  "description": "Express 4 Middleware for MongoDB Session Storage using the Mongoose ODM",
  "bugs": {
    "url": "https://github.com/TheRealCharDev/mongoose-session/issues"
  },
  "_id": "mongoose-session@0.0.2",
  "dist": {
    "shasum": "fd8c869a87bcaa7357b57172b4208b557525ad61"
  },
  "_from": "mongoose-session@",
  "_resolved": "https://registry.npmjs.org/mongoose-session/-/mongoose-session-0.0.2.tgz"
}
